//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.2
//     from Assets/Scripts/CameraInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @CameraInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @CameraInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""CameraInput"",
    ""maps"": [
        {
            ""name"": ""Camera"",
            ""id"": ""99659fe6-83f4-4103-9870-1027b118e0cb"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""3c63b39f-5f17-4278-a554-858a14479193"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotateCameraKeyboard"",
                    ""type"": ""Value"",
                    ""id"": ""d3c5665b-b119-470d-8a89-c59035a5e42c"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraSpeedMultiplier"",
                    ""type"": ""Button"",
                    ""id"": ""1980412f-518b-441d-ab41-b26567c101f7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateCameraMouse"",
                    ""type"": ""Value"",
                    ""id"": ""367a972b-4e33-4dd1-b88a-05ee79d8fca7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ZoomCameraMouse"",
                    ""type"": ""Value"",
                    ""id"": ""e6df1b3b-c804-446c-8bbd-4e85ac84eb9a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""3150e1b8-db9f-4c89-a4bd-092c601ab4b2"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8a886535-1ec5-4ff6-ab57-0bf3c39616f1"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""91dacdef-fe23-46f3-a5e1-6286197df161"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""fa9e3f4e-29f3-4561-a068-0cc5942e2f12"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4f05ae51-0c8c-4b00-82a4-a988f00130e3"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""6052575c-6ee3-4040-8a25-c497808d9ec7"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCameraKeyboard"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""240b13db-317f-4f2f-908c-d480c0e014ba"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCameraKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""807a7f2b-14d4-4fc2-9aed-47586936c382"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCameraKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9aa57f6f-1ea5-4009-9f47-dd00252c0062"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""CameraSpeedMultiplier"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d07308aa-3586-491a-925b-45a45fce213d"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCameraMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c262b7f-50ab-4c12-aa95-f404b47ebeca"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ZoomCameraMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""ps5"",
            ""bindingGroup"": ""ps5"",
            ""devices"": [
                {
                    ""devicePath"": ""<DualShock4GamepadAndroid>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Camera
        m_Camera = asset.FindActionMap("Camera", throwIfNotFound: true);
        m_Camera_Move = m_Camera.FindAction("Move", throwIfNotFound: true);
        m_Camera_RotateCameraKeyboard = m_Camera.FindAction("RotateCameraKeyboard", throwIfNotFound: true);
        m_Camera_CameraSpeedMultiplier = m_Camera.FindAction("CameraSpeedMultiplier", throwIfNotFound: true);
        m_Camera_RotateCameraMouse = m_Camera.FindAction("RotateCameraMouse", throwIfNotFound: true);
        m_Camera_ZoomCameraMouse = m_Camera.FindAction("ZoomCameraMouse", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Camera
    private readonly InputActionMap m_Camera;
    private ICameraActions m_CameraActionsCallbackInterface;
    private readonly InputAction m_Camera_Move;
    private readonly InputAction m_Camera_RotateCameraKeyboard;
    private readonly InputAction m_Camera_CameraSpeedMultiplier;
    private readonly InputAction m_Camera_RotateCameraMouse;
    private readonly InputAction m_Camera_ZoomCameraMouse;
    public struct CameraActions
    {
        private @CameraInput m_Wrapper;
        public CameraActions(@CameraInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Camera_Move;
        public InputAction @RotateCameraKeyboard => m_Wrapper.m_Camera_RotateCameraKeyboard;
        public InputAction @CameraSpeedMultiplier => m_Wrapper.m_Camera_CameraSpeedMultiplier;
        public InputAction @RotateCameraMouse => m_Wrapper.m_Camera_RotateCameraMouse;
        public InputAction @ZoomCameraMouse => m_Wrapper.m_Camera_ZoomCameraMouse;
        public InputActionMap Get() { return m_Wrapper.m_Camera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraActions set) { return set.Get(); }
        public void SetCallbacks(ICameraActions instance)
        {
            if (m_Wrapper.m_CameraActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnMove;
                @RotateCameraKeyboard.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnRotateCameraKeyboard;
                @RotateCameraKeyboard.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnRotateCameraKeyboard;
                @RotateCameraKeyboard.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnRotateCameraKeyboard;
                @CameraSpeedMultiplier.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnCameraSpeedMultiplier;
                @CameraSpeedMultiplier.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnCameraSpeedMultiplier;
                @CameraSpeedMultiplier.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnCameraSpeedMultiplier;
                @RotateCameraMouse.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnRotateCameraMouse;
                @RotateCameraMouse.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnRotateCameraMouse;
                @RotateCameraMouse.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnRotateCameraMouse;
                @ZoomCameraMouse.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnZoomCameraMouse;
                @ZoomCameraMouse.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnZoomCameraMouse;
                @ZoomCameraMouse.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnZoomCameraMouse;
            }
            m_Wrapper.m_CameraActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @RotateCameraKeyboard.started += instance.OnRotateCameraKeyboard;
                @RotateCameraKeyboard.performed += instance.OnRotateCameraKeyboard;
                @RotateCameraKeyboard.canceled += instance.OnRotateCameraKeyboard;
                @CameraSpeedMultiplier.started += instance.OnCameraSpeedMultiplier;
                @CameraSpeedMultiplier.performed += instance.OnCameraSpeedMultiplier;
                @CameraSpeedMultiplier.canceled += instance.OnCameraSpeedMultiplier;
                @RotateCameraMouse.started += instance.OnRotateCameraMouse;
                @RotateCameraMouse.performed += instance.OnRotateCameraMouse;
                @RotateCameraMouse.canceled += instance.OnRotateCameraMouse;
                @ZoomCameraMouse.started += instance.OnZoomCameraMouse;
                @ZoomCameraMouse.performed += instance.OnZoomCameraMouse;
                @ZoomCameraMouse.canceled += instance.OnZoomCameraMouse;
            }
        }
    }
    public CameraActions @Camera => new CameraActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_ps5SchemeIndex = -1;
    public InputControlScheme ps5Scheme
    {
        get
        {
            if (m_ps5SchemeIndex == -1) m_ps5SchemeIndex = asset.FindControlSchemeIndex("ps5");
            return asset.controlSchemes[m_ps5SchemeIndex];
        }
    }
    public interface ICameraActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnRotateCameraKeyboard(InputAction.CallbackContext context);
        void OnCameraSpeedMultiplier(InputAction.CallbackContext context);
        void OnRotateCameraMouse(InputAction.CallbackContext context);
        void OnZoomCameraMouse(InputAction.CallbackContext context);
    }
}
